/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

namespace search {
    [Throws=SearchApiError]
    FilteredSearchEngines filter_engine_configuration(
        SearchUserEnvironment user_environment,
        string configuration
    );

};

[Error]
interface SearchApiError {
    Other(string reason);
};

dictionary SearchAccessPointValues {
    string? addressbar;
    string? contextmenu;
    string? homepage;
    string? newtab;
    string? searchbar;
};

dictionary SearchUrlParam {
    string name;
    string? value;
    string? experiment_config;
    SearchAccessPointValues? search_access_point;
};

dictionary SearchEngineUrl {
    string? base;
    string? method;
    sequence<SearchUrlParam>? params;
    string? search_term_param_name;
};

dictionary SearchEngineUrls {
    SearchEngineUrl search;
    SearchEngineUrl? suggestions;
    SearchEngineUrl? trending;
};

dictionary SearchEngineDefinition {
    sequence<string>? aliases;
    string classification;
    string identifier;
    /// The display name of the search engine.
    string name;
    string? partner_code;
    string? telemetry_suffix;
    SearchEngineUrls urls;
};

dictionary FilteredSearchEngines {
    /// A list of engines, with the default engine first, and the rest in the
    /// order defined by the configuration.
    sequence<SearchEngineDefinition> engines;
    /// The identifier of the private default engine, if it is different to the
    /// default engine.
    string? private_default_engine_id;
};

dictionary SearchUserEnvironment {
    string locale;
    string region;
    string channel;
    string distribution_id;
    string experiment;
    string app_name;
    string version;
};

interface SearchSelector {
    constructor();

    /// TODO:  How to handle error AND ByArc?
    [Throws=SearchApiError, Self=ByArc]
    void set_search_config(string configuration);

    [Throws=SearchApiError]
    FilteredSearchEngines filter_engine_configuration(
        SearchUserEnvironment user_environment
    );
};
